<!DOCTYPE html>
<html>
<head>
    <title>CustomChart-1.2.9-1</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Tue Sep 11 2018 19:03:22 GMT+0000 (UTC) -->

    <script type="text/javascript">
        var APP_BUILD_DATE = "Tue Sep 11 2018 19:03:22 GMT+0000 (UTC)";
        var CHECKSUM = 12721193671;
    </script>

    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns)
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->


    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Utils",{singleton:!0,getFieldForAggregationType:function(a){switch(a){case"acceptedleafcount":return"AcceptedLeafStoryCount";case"acceptedleafplanest":return"AcceptedLeafStoryPlanEstimateTotal";case"leafcount":return"LeafStoryCount";case"leafplanest":return"LeafStoryPlanEstimateTotal";case"prelimest":return"PreliminaryEstimateValue";case"refinedest":return"RefinedEstimate";case"taskest":return"Estimate";case"taskactuals":return"Actuals";default:return"PlanEstimate"}}}),Ext.define("Calculator",{config:{calculationType:void 0,field:void 0,stackField:void 0,stackValues:void 0,bucketBy:void 0},constructor:function(a){this.initConfig(a)},prepareChartData:function(a){var b,c=this._groupData(a),d=_.keys(c);if(this.stackField){var e,f=a.model.getField(this.stackField);if(this.stackValues)e=_.map(this.stackValues,function(a){return this._getDisplayValue(f,a)},this);else{var g=_.invoke(a.getRange(),"get",this.stackField);("Iteration"===this.stackField||"Release"===this.stackField)&&(g=_.sortBy(g,function(a){var b=a&&(a.StartDate||a.ReleaseStartDate||null);return new Date(b)})),e=_.unique(_.map(g,function(a){return this._getDisplayValue(f,a)},this))}var h={};return _.each(d,function(a){var b=c[a],d=_.groupBy(b,function(a){return this._getDisplayValueForField(a,this.stackField)},this);_.each(e,function(a){h[a]=h[a]||[];var b=d[a];if("count"===this.calculationType)h[a].push(b&&b.length||0);else{var c=_.reduce(b,function(a,b){var c=this._getValueFieldForCalculationType();return a+b.get(c)},0,this);h[a].push(c)}},this)},this),{categories:d,series:_.map(e,function(a){return{name:a,type:this.seriesType,data:h[a]}},this)}}return b="count"===this.calculationType?_.map(c,function(a,b){return[b,a.length]}):_.map(c,function(a,b){var c=_.reduce(a,function(a,b){var c=this._getValueFieldForCalculationType();return a+b.get(c)},0,this);return[b,c]},this),{categories:d,series:[{name:this.field,type:this.seriesType,data:b}]}},_groupData:function(a){var b=a.model.getField(this.field),c=b.getType(),d={};if("collection"===c)return _.each(a.getRange(),function(a){var b=a.get(this.field),c=b._tagsNameArray;_.isEmpty(c)?(d.None=d.None||[],d.None.push(a)):_.each(c,function(b){d[b.Name]=d[b.Name]||[],d[b.Name].push(a)})},this),d;if(d=_.groupBy(a.getRange(),function(a){return this._getDisplayValueForField(a,this.field)},this),"date"===c){var e=_.sortBy(_.compact(_.map(a.getRange(),function(a){return a.get(this.field)},this))),f=this._getDateRange(e[0],e[e.length-1]),g={};d["-- No Entry --"]&&(g["-- No Entry --"]=d["-- No Entry --"]),d=_.reduce(f,function(a,c){var e=this._getDisplayValue(b,moment(c).toDate());return a[e]=d[e]||[],a},g,this)}return d},_getDateRange:function(a,b){var c=a,d=[],e="d";for("week"===this.bucketBy?e="w":"month"===this.bucketBy?e="M":"quarter"===this.bucketBy?e="Q":"year"===this.bucketBy&&(e="y");b>=c;)d.push(c),c=moment(c).add(1,e).toDate();return d.push(b),d},_getDisplayValueForField:function(a,b){var c=a.getField(b),d=a.get(b);return this._getDisplayValue(c,d)},_getDisplayValue:function(a,b){if(!_.isDate(b)){if(_.isObject(b))return b._refObjectName;if(Ext.isEmpty(b)){var c=a.getType();return"User"===a.attributeDefinition.SchemaType?"-- No Owner --":"rating"===c||"object"===c?"None":"-- No Entry --"}return b}return this.bucketBy&&"day"!==this.bucketBy?"week"===this.bucketBy?Rally.util.DateTime.formatWithDefault(moment(b).startOf("week").toDate()):"month"===this.bucketBy?moment(b).startOf("month").format("MMM 'YY"):"quarter"===this.bucketBy?moment(b).startOf("quarter").format("YYYY [Q]Q"):"year"===this.bucketBy?moment(b).startOf("year").format("YYYY"):void 0:Rally.util.DateTime.formatWithDefault(b)},_getValueFieldForCalculationType:function(){return Utils.getFieldForAggregationType(this.calculationType)}}),Ext.define("BarCalculator",{extend:"Calculator",seriesType:"bar"}),Ext.define("BarChart",{xtype:"barchart",extend:"Rally.ui.chart.Chart",requires:["BarCalculator"],config:{chartConfig:{chart:{type:"bar"},title:{text:""},yAxis:{min:0,title:{text:""},stackLabels:{enabled:!0,style:{fontWeight:"bold",color:"gray"}},reversedStacks:!1},plotOptions:{bar:{stacking:"normal",dataLabels:{enabled:!1},showInLegend:!0,colorByPoint:!1}}},calculatorType:"BarCalculator"},constructor:function(a){a=a||{},this.mergeConfig(a),this.chartConfig.plotOptions.bar.showInLegend=this.enableStacking,this.chartConfig.plotOptions.bar.colorByPoint=!this.enableStacking,this.enableStacking||(this.chartConfig.tooltip={headerFormat:"",pointFormat:"{point.name}: <b>{point.y}</b>"}),this.callParent([this.config])}}),Ext.define("ColumnCalculator",{extend:"Calculator",seriesType:"column"}),Ext.define("ColumnChart",{xtype:"columnchart",extend:"Rally.ui.chart.Chart",requires:["ColumnCalculator"],config:{chartConfig:{chart:{type:"column"},title:{text:""},yAxis:{min:0,title:{text:""},stackLabels:{enabled:!0,style:{fontWeight:"bold",color:"gray"}},reversedStacks:!1},plotOptions:{column:{stacking:"normal",dataLabels:{enabled:!1},showInLegend:!1,colorByPoint:!0}}},calculatorType:"ColumnCalculator"},constructor:function(a){a=a||{},this.mergeConfig(a),this.chartConfig.plotOptions.column.showInLegend=this.enableStacking,this.chartConfig.plotOptions.column.colorByPoint=!this.enableStacking,this.enableStacking||(this.chartConfig.tooltip={headerFormat:"",pointFormat:"{point.name}: <b>{point.y}</b>"}),this.callParent([this.config])}}),Ext.define("PieCalculator",{extend:"Calculator",seriesType:"pie"}),Ext.define("PieChart",{xtype:"piechart",extend:"Rally.ui.chart.Chart",requires:["PieCalculator"],config:{chartConfig:{chart:{type:"pie",plotBackgroundColor:null,plotBorderWidth:null,plotShadow:!1},title:{text:""},tooltip:{headerFormat:"",pointFormat:"<b>{point.name}:</b> {point.percentage:.1f}% ({point.y}/{point.total})"},plotOptions:{pie:{allowPointSelect:!0,cursor:"pointer",dataLabels:{enabled:!0,format:"<b>{point.name}:</b> {point.percentage:.1f}% ({point.y}/{point.total})",style:{color:"black"}}}}},calculatorType:"PieCalculator"},constructor:function(a){a=a||{},this.mergeConfig(a),this.callParent([this.config])}}),Ext.define("Settings",{singleton:!0,getSettingsFields:function(a){return[{id:"searchAllProjects",name:"searchAllProjects",fieldLabel:"Scope Across Workspace",labelAlign:"left",xtype:"rallycheckboxfield",labelWidth:150,margin:10,hidden:!a.showSearchAllProjects},{name:"chartType",xtype:"rallycombobox",plugins:["rallyfieldvalidationui"],fieldLabel:"Chart Type",displayField:"name",valueField:"value",editable:!1,allowBlank:!1,store:Ext.create("Ext.data.Store",{fields:["name","value"],data:[{name:"Bar",value:"barchart"},{name:"Column",value:"columnchart"},{name:"Pie",value:"piechart"}]}),listeners:{change:function(a){a.fireEvent("chartselected",a.getValue(),a.context)}},bubbleEvents:["chartselected"],handlesEvents:{typeselected:function(){this.fireEvent("chartselected",this.getValue())}}},{name:"types",xtype:"rallycombobox",plugins:["rallyfieldvalidationui"],allowBlank:!1,editable:!1,autoSelect:!1,validateOnChange:!1,validateOnBlur:!1,fieldLabel:"Type",shouldRespondToScopeChange:!0,context:a.context,storeConfig:{model:"TypeDefinition",sorters:[{property:"DisplayName"}],fetch:["DisplayName","TypePath"],filters:[{property:"UserListable",value:!0}],autoLoad:!1,remoteSort:!1,sortOnLoad:!0,remoteFilter:!0},displayField:"DisplayName",valueField:"TypePath",listeners:{change:function(a){a.fireEvent("typeselected",a.getValue(),a.context)},ready:function(a){a.fireEvent("typeselected",a.getValue(),a.context)}},bubbleEvents:["typeselected"],readyEvent:"ready",handlesEvents:{projectscopechanged:function(a){this.refreshWithNewContext(a)}}},{name:"aggregationField",xtype:"rallyfieldcombobox",plugins:["rallyfieldvalidationui"],fieldLabel:"Aggregate By",readyEvent:"ready",allowBlank:!1,validateOnChange:!1,validateOnBlur:!1,width:300,handlesEvents:{typeselected:function(a,b){var c=Ext.Array.from(a)[0];c?this.refreshWithNewModelType(c,b):(this.store.removeAll(),this.reset())}},bubbleEvents:["fieldselected"],listeners:{change:function(a){a.getRecord()&&a.fireEvent("fieldselected",a.getRecord().get("fieldDefinition"))},ready:function(a){a.store.filterBy(function(a){var b=a.get("fieldDefinition"),c=b.attributeDefinition,d=["Tags","Milestones"];return c&&!c.Hidden&&(("COLLECTION"!==c.AttributeType||b.isMultiValueCustom())&&!b.isMappedFromArtifact||_.contains(d,b.name))});var b=Ext.Array.map(a.store.getRange(),function(b){return b.get(a.getValueField())});Ext.Array.contains(b,a.getValue())||a.setValue(b[0]),a.getRecord()&&a.fireEvent("fieldselected",a.getRecord().get("fieldDefinition"))}}},{name:"bucketBy",xtype:"rallycombobox",plugins:["rallyfieldvalidationui"],fieldLabel:"Bucket By",displayField:"name",valueField:"value",editable:!1,allowBlank:!1,store:{fields:["name","value"],data:[{name:"Day",value:"day"},{name:"Week",value:"week"},{name:"Month",value:"month"},{name:"Quarter",value:"quarter"},{name:"Year",value:"year"}]},lastQuery:"",hidden:!0,toggleVisibility:function(){"date"===this.selectedFieldType&&"piechart"!==this.selectedChartType?this.show():this.hide()},handlesEvents:{fieldselected:function(a){this.selectedFieldType=a.getType(),this.toggleVisibility()},chartselected:function(a){this.selectedChartType=a,this.toggleVisibility()}}},{name:"aggregationType",xtype:"rallycombobox",plugins:["rallyfieldvalidationui"],fieldLabel:"Aggregation Type",displayField:"name",valueField:"value",editable:!1,allowBlank:!1,width:300,store:{fields:["name","value"],data:[{name:"Accepted Leaf Story Count",value:"acceptedleafcount"},{name:"Accepted Leaf Story Plan Estimate Total",value:"acceptedleafplanest"},{name:"Count",value:"count"},{name:"Plan Estimate Total",value:"estimate"},{name:"Leaf Story Count",value:"leafcount"},{name:"Leaf Story Plan Estimate Total",value:"leafplanest"},{name:"Preliminary Estimate Total",value:"prelimest"},{name:"Refined Estimate Total",value:"refinedest"},{name:"Actuals Total",value:"taskactuals"},{name:"Estimate Total",value:"taskest"}]},lastQuery:"",handlesEvents:{typeselected:function(a){var b=Ext.Array.from(a)[0];Rally.data.ModelFactory.getModel({type:b,success:function(a){this.store.filterBy(function(b){return"count"===b.get("value")||a.hasField(Utils.getFieldForAggregationType(b.get("value")))}),this.store.findRecord("value",this.getValue())||this.setValue("count")},scope:this})}}},{name:"stackField",xtype:"rallyfieldcombobox",plugins:["rallyfieldvalidationui"],fieldLabel:"Stack By",readyEvent:"ready",allowBlank:!1,allowNoEntry:!0,noEntryText:"-- No Stacking --",validateOnChange:!1,validateOnBlur:!1,width:300,hidden:!0,toggleVisibility:function(a){"piechart"===a?(this.hide(),this.select(this.store.getRange()[0])):this.show()},handlesEvents:{chartselected:function(a){this.toggleVisibility(a)},typeselected:function(a,b){var c=Ext.Array.from(a)[0];c&&this.refreshWithNewModelType(c,b)}},listeners:{ready:function(a){a.store.filterBy(function(b){var c=b.get("fieldDefinition"),d=c.attributeDefinition;return b.get(a.getValueField())===a.noEntryValue||d&&!d.Hidden&&c.hasAllowedValues()&&!_.contains(["collection"],c.getType())});var b=Ext.Array.map(a.store.getRange(),function(b){return b.get(a.getValueField())});Ext.Array.contains(b,a.getValue())||a.setValue(b[0])}}},{type:"query"}]}}),Ext.define("CustomChartApp",{extend:"Rally.app.App",componentCls:"app",layout:"fit",config:{defaultSettings:{types:"Defect",chartType:"piechart",aggregationField:"State",aggregationType:"count",bucketBy:"",stackField:"",query:"",searchAllProjects:[{checked:!1}]}},launch:function(){this.getSetting("types")?Rally.data.wsapi.ModelFactory.getModels({types:this._getTypesSetting()}).then({success:this._onModelsLoaded,scope:this}):this.fireEvent("appsettingsneeded")},isMilestoneScoped:function(){var a=!1,b=this.getContext().getTimeboxScope();return b&&"milestone"==b.getType()&&(a=!0),a},searchAllProjects:function(){var a=this.getSetting("searchAllProjects");return this.isMilestoneScoped()&&a},getSettingsFields:function(){return Settings.getSettingsFields({context:this.getContext(),showSearchAllProjects:this.isMilestoneScoped()})},_shouldLoadAllowedStackValues:function(a){var b=a&&a.hasAllowedValues(),c=b&&(_.contains(["state","rating","string"],a.getType())||"state"===a.getAllowedValueType()||"flowstate"===a.getAllowedValueType());return c},_onModelsLoaded:function(a){this.models=_.values(a);var b=this.models[0],c=this._getStackingSetting(),d=c&&b.getField(c);this._shouldLoadAllowedStackValues(d)?d.getAllowedValueStore().load().then({success:function(a){this.stackValues=_.invoke(a,"get","StringValue"),this._addChart()},scope:this}):this._addChart()},_addChart:function(){var a=this.getContext(),b=a.getDataContext();this.searchAllProjects()&&(b.project=null);var c=["Milestones","Tags"],d=_.pluck(this.models,"typePath"),e={xtype:"rallygridboard",toggleState:"chart",chartConfig:this._getChartConfig(),plugins:[{ptype:"rallygridboardinlinefiltercontrol",showInChartMode:!0,inlineFilterButtonConfig:{stateful:!0,stateId:a.getScopedStateId("filters"),filterChildren:!0,modelNames:d,inlineFilterPanelConfig:{quickFilterPanelConfig:{defaultFields:this._getQuickFilters(),addQuickFilterConfig:{whiteListFields:c}},advancedFilterPanelConfig:{advancedFilterRowsConfig:{propertyFieldConfig:{whiteListFields:c}}}}}},{ptype:"rallygridboardactionsmenu",menuItems:[{text:"Export to CSV...",handler:function(){window.location=Rally.ui.gridboard.Export.buildCsvExportUrl(this.down("rallygridboard").getGridOrBoard())},scope:this}],buttonConfig:{iconCls:"icon-export",toolTipConfig:{html:"Export",anchor:"top",hideDelay:0}}}],context:a,modelNames:d,storeConfig:{filters:this._getFilters(),context:b}};this.add(e)},_getQuickFilters:function(){var a=["Owner","State","ScheduleState"],b=this.models[0];return this.models.length>1&&a.push("ModelType"),_.filter(a,function(a){return b.hasField(a)})},_getTypesSetting:function(){return this.getSetting("types").split(",")},_getStackingSetting:function(){var a=this.getSetting("chartType");return"piechart"!==a?this.getSetting("stackField"):null},_getChartConfig:function(){var a=this.getSetting("chartType"),b=this._getStackingSetting(),c=this.stackValues,d=this.models[0],e={xtype:a,enableStacking:!!b,chartColors:["#FF8200","#F6A900","#FAD200","#8DC63F","#1E7C00","#337EC6","#005EB8","#7832A5","#DA1884","#C0C0C0"],storeConfig:{context:this.getContext().getDataContext(),limit:1/0,fetch:this._getChartFetch(),sorters:this._getChartSort(),pageSize:2e3},calculatorConfig:{calculationType:this.getSetting("aggregationType"),field:this.getSetting("aggregationField"),stackField:b,stackValues:c,bucketBy:"piechart"===a?null:this.getSetting("bucketBy")}};return d.isArtifact()?(e.storeConfig.models=this._getTypesSetting(),e.storeType="Rally.data.wsapi.artifact.Store"):(e.storeConfig.model=d,e.storeType="Rally.data.wsapi.Store"),e},onTimeboxScopeChange:function(){this.callParent(arguments);var a=this.down("rallygridboard");a&&a.destroy(),this._addChart()},_getChartFetch:function(){var a=this.getSetting("aggregationField"),b=this.getSetting("aggregationType"),c=this._getStackingSetting(),d=["FormattedID","Name",a];return"count"!==b&&d.push(Utils.getFieldForAggregationType(b)),c&&d.push(c),_.contains(d,"Iteration")&&d.push("StartDate"),_.contains(d,"Release")&&d.push("ReleaseStartDate"),d},_getChartSort:function(){var a=this.models[0],b=a.getField(this.getSetting("aggregationField")),c=[];return b&&"collection"!==b.getType()&&b.sortable&&c.push({property:this.getSetting("aggregationField"),direction:"ASC"}),c},_getFilters:function(){var a=[],b=this.getContext().getTimeboxScope();if(this.getSetting("query")){var c=this.getSetting("query").replace(/\{user\}/g,this.getContext().getUser()._ref);a.push(Rally.data.QueryFilter.fromQueryString(c))}return b&&_.any(this.models,b.isApplicable,b)&&a.push(b.getQueryFilter()),a}});

               Rally.launchApp('CustomChartApp', {
                   name: 'CustomChart'
               });
        });
    </script>

    <style type="text/css">

.app {
     /* Add app styles here */
}

    </style>

</head>
<body></body>
</html>